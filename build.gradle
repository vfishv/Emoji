apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.vanniktech.code.quality.tools'
apply plugin: 'com.vanniktech.android.junit.jacoco'

buildscript {
  ext.versions = [
    kotlin: '1.4.0',
  ]

  repositories {
    mavenCentral()
    google()
    gradlePluginPortal()
  }
  dependencies {
    classpath 'com.vanniktech:gradle-code-quality-tools-plugin:0.20.0'
    classpath 'com.vanniktech:gradle-android-junit-jacoco-plugin:0.16.0'
    classpath 'com.vanniktech:gradle-maven-publish-plugin:0.12.0'

    classpath 'com.android.tools.build:gradle:4.0.1'
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.29.0'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
  }
}

codeQualityTools {
  lint {
    textReport = true
  }
  checkstyle {
    toolVersion = '8.7'
  }
  pmd {
    toolVersion = '6.0.1'
  }
  ktlint {
    toolVersion = '0.34.2'
  }
  detekt {
    toolVersion = '1.0.1'
  }
  errorProne {
    toolVersion = '2.1.2'
  }
  cpd {
    enabled = false
  }
}

junitJacoco {
  // Don't care about sample and generated modules
  ignoreProjects = ['app', 'emoji-ios', 'emoji-google', 'emoji-twitter', 'emoji-compat', 'emoji-kotlin']
}

subprojects {
  repositories {
    google()
    jcenter()
    mavenCentral()
  }
}

ext {
  minSdkVersion = 21
  compileSdkVersion = 29
  targetSdkVersion = 29

  versionCode = VERSION_CODE
  versionName = VERSION_NAME

  testing = [
          junit             : 'junit:junit:4.13',
          assertJ           : 'org.assertj:assertj-core:2.9.1',
  ]
}

wrapper {
  gradleVersion = '6.5.1'
  distributionType = Wrapper.DistributionType.ALL
}

subprojects {
  project.plugins.withId("com.android.library") {
    project.android.buildFeatures.buildConfig = false
  }
}
