buildscript {
  repositories {
    mavenCentral()
    google()
    gradlePluginPortal()
  }
  dependencies {
    classpath(libs.plugin.android.cache.fix)
    classpath(libs.plugin.androidgradleplugin)
    classpath(libs.plugin.dependency.guard)
    classpath(libs.plugin.dokka)
    classpath(libs.plugin.kotlin)
    classpath(libs.plugin.licensee)
    classpath(libs.plugin.metalava)
    classpath(libs.plugin.publish)
  }
}

plugins {
  alias(libs.plugins.codequalitytools)
  alias(libs.plugins.dependencygraphgenerator)
}

codeQualityTools {
  lint {
    lintConfig = rootProject.file("lint.xml")
    checkAllWarnings = true
    textReport = true
  }
  checkstyle {
    enabled = false // Kotlin only.
  }
  pmd {
   enabled = false // Kotlin only.
  }
  ktlint {
    toolVersion = libs.versions.ktlint.get()
    experimental = true
  }
  detekt {
    enabled = false
  }
  cpd {
    enabled = false
  }
}

wrapper {
  gradleVersion = libs.versions.gradle.get()
  distributionType = Wrapper.DistributionType.ALL
}

allprojects {
  repositories {
    google()
    mavenCentral()
    gradlePluginPortal()
  }

  afterEvaluate {
    // To avoid:
    // The Kotlin source set androidAndroidTestRelease was configured but not added to any Kotlin compilation. You can add a source set to a target"s compilation by connecting it with the compilation"s default source set using "dependsOn".
    // See https://kotlinlang.org/docs/reference/building-mpp-with-gradle.html#connecting-source-sets
    project.extensions.findByType(org.jetbrains.kotlin.gradle.dsl.KotlinMultiplatformExtension.class)?.sourceSets?.removeAll {
      [
        "androidAndroidTestRelease",
        "androidTestFixtures",
        "androidTestFixturesDebug",
        "androidTestFixturesRelease"
      ].contains(it.name)
    }
  }
}

subprojects {
  plugins.withType(com.android.build.gradle.api.AndroidBasePlugin) {
    project.apply plugin: "org.gradle.android.cache-fix"
  }

  project.tasks.withType(Test) {
    testLogging {
      testLogging.exceptionFormat = 'full'
    }
  }
}
