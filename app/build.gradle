plugins {
  id("com.android.application")
  id("org.jetbrains.kotlin.android")
  id("com.dropbox.dependency-guard")
}

dependencyGuard {
  configuration("releaseRuntimeClasspath")
}

android {
  namespace = "com.vanniktech.emoji.sample"

  compileSdkVersion libs.versions.compileSdk.get() as int

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  defaultConfig {
    applicationId "com.vanniktech.emoji.sample"
    minSdkVersion libs.versions.minSdk.get() as int
    targetSdkVersion libs.versions.targetSdk.get() as int
    versionCode 10
    versionName VERSION_NAME

    vectorDrawables.useSupportLibrary = true

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  buildFeatures {
    viewBinding = true
  }

  def shouldSign = project.hasProperty('RELEASE_STORE_FILE') && project.hasProperty('RELEASE_STORE_PASSWORD') && project.hasProperty('RELEASE_KEY_ALIAS') && project.hasProperty('RELEASE_KEY_PASSWORD')

  if (shouldSign) {
    signingConfigs {
      release {
        // http://stackoverflow.com/a/21020469/1979703
        storeFile file(RELEASE_STORE_FILE)
        storePassword RELEASE_STORE_PASSWORD
        keyAlias RELEASE_KEY_ALIAS
        keyPassword RELEASE_KEY_PASSWORD
      }
    }
  }

  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
      shrinkResources true
      zipAlignEnabled true

      if (shouldSign) {
        signingConfig signingConfigs.release
      }
    }
  }
}

dependencies {
  implementation project(':emoji-ios')
  implementation project(':emoji-google')
  implementation project(':emoji-google-compat')
  implementation project(':emoji-twitter')
  implementation project(':emoji-facebook')
  implementation project(':emoji-material')
  implementation libs.timber
}

dependencies {
  debugImplementation libs.leakcanary.android
}

dependencies {
  androidTestImplementation libs.androidx.test.espresso
  androidTestImplementation libs.androidx.test.ext
  androidTestImplementation libs.androidx.test.rules
  androidTestImplementation libs.falcon
  androidTestImplementation libs.junitintegrationrules
  androidTestImplementation libs.screengrab
  androidTestImplementation libs.espressocoreutils
}
